{"version":3,"sources":["libs/contextLib.js","libs/errorLib.js","config.js","components/LoadingButton.js","containers/ShoppingList.js","libs/hooksLib.js","containers/Login.js","containers/NotFound.js","containers/Signup.js","libs/awsLib.js","containers/NewItem.js","containers/Items.js","containers/Inventory.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","createContext","useAppContext","useContext","onError","error","message","toString","Error","alert","REGION","BUCKET","URL","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","LoadingButton","isLoading","className","disabled","props","Button","Spinner","as","animation","size","role","children","ShoppingList","useState","items","setItems","isAuthenticated","setIsLoading","isDeleting","setIsDeleting","getAlternative","item","itemName","alternative","quantity","units","category","itemId","handleSubmit","event","a","preventDefault","console","log","target","value","JSON","parse","createInventoryItem","deleteItem","loadItems","API","post","body","del","handleDelete","window","confirm","id","get","useEffect","onLoad","ListGroup","concat","map","i","ListGroupItem","key","Row","Col","xs","to","ButtonGroup","variant","stringify","type","onClick","renderItemsList","useFormFields","initialState","fields","setValues","Login","userHasAuthenticated","history","useHistory","email","password","handleFieldChange","Auth","signIn","push","Form","onSubmit","Label","FormControl","autoFocus","onChange","length","NotFound","Signup","confirmPassword","confirmationCode","newUser","setNewUser","signUp","username","handleConfirmationSubmit","confirmSignUp","s3Upload","file","filename","Date","now","name","Storage","vault","put","contentType","stored","NewItem","useRef","notes","current","config","picture","createItem","Container","sm","Control","files","Items","useParams","setItem","isEditing","setIsEditing","saveItem","loadItem","pictureUrl","componentClass","src","width","height","Inventory","Routes","exact","path","App","isAuthenticating","setIsAuthenticating","currentSession","signOut","Navbar","Collapse","Nav","Link","style","textDecoration","Provider","Boolean","location","hostname","match","Amplify","configure","mandatorySignIn","region","userPoolId","identityPoolId","userPoolWebClientId","bucket","endpoints","endpoint","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.69873b4d.chunk.js","sourcesContent":["import { useContext, createContext } from \"react\";\n\nexport const AppContext = createContext(null);\nexport function useAppContext() {\n    return useContext(AppContext); // react hook to access context\n}","export function onError(error) {\n    let message = error.toString();\n\n    if (!(error instanceof Error) && error.message) {\n        message = error.message;\n    }\n    alert(message);\n}","export default {\n  MAX_ATTACHMENT_SIZE: 5000000,\n  s3: {\n    REGION: \"us-east-1\",\n    BUCKET: \"malcolm-app-uploads\"\n  },\n  apiGateway: {\n    REGION: \"us-east-1\",\n    URL: \"https://3p0ts5laug.execute-api.us-east-1.amazonaws.com/prod\"\n  },\n  cognito: {\n    REGION: \"us-east-1\",\n    USER_POOL_ID: \"us-east-1_CiU3BzeO0\",\n    APP_CLIENT_ID: \"11nv7q37ll1882bft5nhdue30d\",\n    IDENTITY_POOL_ID: \"us-east-1:9588b5c7-a409-432a-b294-bcc9d1dfd8bf\"\n  }\n};","import React from \"react\";\nimport { Button, Spinner } from \"react-bootstrap\";\n\nexport default function LoadingButton({\n    isLoading,\n    className = \"\",\n    disabled = false,\n    ...props\n}) {\n    return (\n        <Button\n            disabled={disabled || isLoading}\n            {...props}\n        >\n            {isLoading && <Spinner as=\"span\"\n                animation=\"border\"\n                size=\"sm\"\n                role=\"status\" />}\n            {props.children}\n        </Button>\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { onError } from \"../libs/errorLib\";\nimport { ListGroup, ListGroupItem, Button, ButtonGroup, Modal, Row, Col, Form, FormCheck } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { API } from \"aws-amplify\";\nimport config from \"../config\";\nimport InventoryModal from \"../components/InventoryModal\"\nimport LoadingButton from \"../components/LoadingButton\"\nexport default function ShoppingList() {\n    const [items, setItems] = useState([]);\n    const { isAuthenticated } = useAppContext();\n    const [isLoading, setIsLoading] = useState(true);\n    const [isDeleting, setIsDeleting] = useState(false);\n\n    function getAlternative(item) {\n        return {\n            itemName: item.alternative,\n            alternative: item.itemName,\n            quantity: item.quantity,\n            units: item.units,\n            category: item.category,\n            itemId: item.itemId\n        }\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        console.log(\"event.target.value: \", event.target.value);\n        var item = JSON.parse(event.target.value);\n        console.log(\"item: \", item);\n        var itemName = item.itemName;\n        var quantity = item.quantity;\n        var units = item.units;\n        var category = item.category;\n        console.log({ itemName, quantity, units, category });\n        setIsLoading(true);\n        try {\n            await createInventoryItem({ itemName, quantity, units, category });\n            setIsLoading(false);\n        } catch (e) {\n            onError(e);\n            setIsLoading(false);\n        }\n        setIsDeleting(true);\n        try {\n            await deleteItem(item.itemId);\n            setItems(await loadItems());\n        } catch (e) {\n            onError(e);\n            setIsDeleting(false);\n        }\n    }\n    function createInventoryItem(item) {\n        return API.post(\"items\", \"/inventory\", {\n            body: item\n        });\n    }\n\n    useEffect(() => {\n        async function onLoad() {\n            if (!isAuthenticated) {\n                return;\n            }\n            try {\n                const items = await loadItems();\n                setItems(items);\n            } catch (e) {\n                onError(e);\n            }\n            setIsLoading(false);\n        }\n        onLoad();\n    }, [isAuthenticated]) // run hook when isAuthenticated is updated\n\n    function deleteItem(itemId) {\n        return API.del(\"items\", `/items/${itemId}`);\n    }\n\n    async function handleDelete(event) {\n        event.preventDefault();\n        const confirmed = window.confirm(\n            \"Remove this item from shopping list?\"\n        );\n        if (!confirmed) { return; }\n        setIsDeleting(true);\n        try {\n            await deleteItem(event.target.id);\n            setItems(await loadItems());\n        } catch (e) {\n            onError(e);\n            setIsDeleting(false);\n        }\n    }\n\n    async function loadItems() {\n        return API.get(\"items\", \"/items\");\n    }\n    function renderItemsList(items) {\n        // always display + add new item at beginning of list\n        return [{}].concat(items).map((item, i) =>\n            i !== 0 ? (\n                <ListGroupItem key={i}>\n                    <Row>\n                        <Col xs={6}>\n                            <LinkContainer key={item.itemId} to={`/items/${item.itemId}`}>\n                                <>\n                                    <p>{item.itemName} - {item.quantity} {item.units}</p>\n                                    <p>alt: {item.alternative}</p>\n                                </>\n                            </LinkContainer>\n                        </Col>\n                        <Col>\n                            <ButtonGroup>\n                                <Button\n                                    variant=\"outline-dark\"\n                                    id={item.itemId + \"buy\"}\n                                    value={JSON.stringify(item)}\n                                    type=\"submit\"\n                                    onClick={handleSubmit}>\n                                    buy\n                                </Button>\n                                <Button\n                                    variant=\"outline-dark\"\n                                    id={item.itemId + \"buy_alt\"}\n                                    value={JSON.stringify(getAlternative(item))}\n                                    type=\"submit\"\n                                    onClick={handleSubmit}>\n                                    alt\n                                </Button>\n                                <Button\n                                    variant=\"outline-dark\"\n                                    id={item.itemId}\n                                    type=\"submit\"\n                                    onClick={handleDelete}\n                                    isLoading={isDeleting}>\n                                    ✕\n                                </Button>\n\n                            </ButtonGroup>\n                        </Col>\n                    </Row>\n                </ListGroupItem>\n            ) :\n                <LinkContainer key=\"new\" to=\"items/new\">\n                    <ListGroupItem>\n                        + Add new item\n                    </ListGroupItem>\n                </LinkContainer>\n        );\n    }\n\n    function renderLander() {\n        return (\n            <div>\n                <h1>Shopping List</h1>\n                <p>Log in to get started!</p>\n            </div>\n        )\n    }\n\n    function renderItems() {\n        return (\n            <div>\n                <h1>Shopping List</h1>\n                <ListGroup>\n                    {!isLoading && renderItemsList(items)}\n                </ListGroup>\n            </div>\n        )\n    }\n    return (\n        <div>\n            {isAuthenticated ? renderItems() : renderLander()}\n        </div>\n    );\n}","import { useState } from \"react\";\n\nexport function useFormFields(initialState) {\n    const [fields, setValues] = useState(initialState);\n    return [\n        fields,\n        function (event) {\n            setValues({\n                ...fields,\n                [event.target.id]: event.target.value\n            });\n        }\n    ];\n}","import React from \"react\";\nimport { Button, Form, FormControl } from \"react-bootstrap\";\nimport { Auth } from \"aws-amplify\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { useHistory } from \"react-router-dom\";\nimport { onError } from \"../libs/errorLib\";\nimport { useFormFields } from \"../libs/hooksLib\";\n\nexport default function Login() {\n    const { userHasAuthenticated } = useAppContext();\n    const history = useHistory();\n    var [fields, handleFieldChange] = useFormFields({\n        email: \"\",\n        password: \"\"\n    });\n    function validateForm() {\n        return fields.email.length > 0 && fields.password.length > 0;\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        try {\n            await Auth.signIn(fields.email, fields.password);\n            userHasAuthenticated(true);\n            history.push(\"/\");\n        } catch (e) {\n            onError(e);\n            console.log(e.message);\n        }\n    }\n    return (\n        <div>\n            <Form onSubmit={handleSubmit}>\n                <Form.Label>Email</Form.Label>\n                <FormControl\n                    autoFocus\n                    id=\"email\"\n                    type=\"email\"\n                    value={fields.email}\n                    onChange={handleFieldChange}\n                />\n                <Form.Label>Password</Form.Label>\n                <FormControl\n                    id=\"password\"\n                    type=\"password\"\n                    value={fields.password}\n                    onChange={handleFieldChange}\n                />\n                <Button disabled={!validateForm()} type=\"submit\">\n                    Login\n                </Button>\n            </Form>\n        </div>\n    )\n\n}","import React from \"react\";\n\nexport default function NotFound() {\n    return (\n        <div>\n            <h3>\n                404 Page Not Found\n            </h3>\n        </div>\n    );\n}","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Form, FormControl } from \"react-bootstrap\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport { onError } from \"../libs/errorLib\";\nimport { Auth } from \"aws-amplify\";\nexport default function Signup() {\n    const [fields, handleFieldChange] = useFormFields({\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        confirmationCode: \"\",\n    });\n    const history = useHistory();\n    const [newUser, setNewUser] = useState(null);\n    const { userHasAuthenticated } = useAppContext();\n    const [isLoading, setIsLoading] = useState(false);\n\n    function validateForm() {\n        return (\n            fields.email.length > 0 &&\n            fields.password.length > 0 &&\n            fields.password === fields.confirmPassword\n        );\n    }\n\n    function validateConfirmationForm() {\n        return fields.confirmationCode.length > 0;\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        setIsLoading(true);\n        try {\n            const newUser = await Auth.signUp({\n                username: fields.email,\n                password: fields.password,\n            });\n            setIsLoading(false);\n            setNewUser(newUser);\n        } catch (e) {\n            onError(e);\n            setIsLoading(false);\n        }\n    }\n\n    async function handleConfirmationSubmit(event) {\n        event.preventDefault();\n\n        setIsLoading(true);\n\n        try {\n            await Auth.confirmSignUp(fields.email, fields.confirmationCode);\n            await Auth.signIn(fields.email, fields.password);\n\n            userHasAuthenticated(true);\n            history.push(\"/\");\n        } catch (e) {\n            onError(e);\n            setIsLoading(false);\n        }\n    }\n\n    function renderConfirmationForm() {\n        return (\n            <Form onSubmit={handleConfirmationSubmit}>\n                <Form.Label>Confirmation Code</Form.Label>\n                <FormControl\n                    id=\"confirmationCode\"\n                    autoFocus\n                    type=\"tel\"\n                    onChange={handleFieldChange}\n                    value={fields.confirmationCode}\n                />\n                <Button\n                    type=\"submit\"\n                    disabled={!validateConfirmationForm()}\n                >\n                    Verify\n                </Button>\n            </Form>\n        )\n    }\n    function renderForm() {\n        return (\n            <Form onSubmit={handleSubmit}>\n                <Form.Label>Email</Form.Label>\n                <FormControl\n                    id=\"email\"\n                    autoFocus\n                    type=\"email\"\n                    onChange={handleFieldChange}\n                    value={fields.email}\n                />\n                <Form.Label>Password</Form.Label>\n                <FormControl\n                    id=\"password\"\n                    type=\"password\"\n                    onChange={handleFieldChange}\n                    value={fields.password}\n                />\n                <Form.Label>Confirm Password</Form.Label>\n                <FormControl\n                    id=\"confirmPassword\"\n                    type=\"password\"\n                    onChange={handleFieldChange}\n                    value={fields.confirmPassword}\n                />\n                <Button\n                    type=\"submit\"\n                    disabled={!validateForm()}\n                >\n                    Signup\n                </Button>\n\n            </Form>\n        )\n    }\n    return (\n        <div>\n            {newUser === null ? renderForm() : renderConfirmationForm()}\n        </div>\n    )\n}","import { Storage } from \"aws-amplify\";\n\nexport async function s3Upload(file) {\n  const filename = `${Date.now()}-${file.name}`;\n\n  const stored = await Storage.vault.put(filename, file, {\n    contentType: file.type,\n  });\n\n  return stored.key;\n}","import React, { useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, FormControl, Button, Col, Container } from \"react-bootstrap\";\nimport { onError } from \"../libs/errorLib\";\nimport config from \"../config\";\nimport { API } from \"aws-amplify\";\nimport { s3Upload } from \"../libs/awsLib\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport LoadingButton from \"../components/LoadingButton\"\nexport default function NewItem() {\n    const file = useRef(null);\n    const history = useHistory();\n    const [isLoading, setIsLoading] = useState(false);\n    const [fields, handleFieldChange] = useFormFields({\n        itemName: \"\",\n        quantity: \"\",\n        units: \"\",\n        category: \"\",\n        alternative: [\"\"],\n        notes: \"\"\n    });\n\n    function validateForm() {\n        return fields.itemName.length > 0 && fields.quantity.length > 0 && fields.units.length > 0;\n    }\n\n    function handleFileChange(event) {\n        file.current = event.target.files[0];\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n\n        if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n            alert(\n                `Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE /\n                1000000} MB.`\n            );\n            return;\n        }\n\n        setIsLoading(true);\n        var itemName = fields.itemName;\n        var quantity = fields.quantity;\n        var units = fields.units;\n        var alternative = fields.alternative;\n        var notes = fields.notes;\n        var category = fields.category;\n        try {\n            const picture = file.current ? await s3Upload(file.current) : null;\n            await createItem({ itemName, quantity, units, category, alternative, notes, picture });\n            history.push(\"/\");\n        } catch (e) {\n            onError(e);\n            setIsLoading(false);\n        }\n    }\n\n    function createItem(item) {\n        return API.post(\"items\", \"/items\", {\n            body: item\n        });\n    }\n\n\n    return (\n        <Container>\n            <Form onSubmit={handleSubmit}>\n                <Form.Row>\n                    <Col sm=\"4\">\n                        <Form.Label>Item</Form.Label>\n                        <Form.Control\n                            id=\"itemName\"\n                            value={fields.itemName}\n                            onChange={handleFieldChange}\n                        />\n                    </Col>\n                    <Col sm=\"1\">\n                        <Form.Label>Quantity</Form.Label>\n                        <Form.Control\n                            id=\"quantity\"\n                            value={fields.quantity}\n                            onChange={handleFieldChange}\n                        />\n                    </Col>\n                    <Col sm=\"1\">\n                        <Form.Label>Units</Form.Label>\n                        <Form.Control\n                            id=\"units\"\n                            value={fields.units}\n                            onChange={handleFieldChange}\n                        />\n                    </Col>\n                    <Col sm=\"4\">\n                        <Form.Label>Alternative</Form.Label>\n                        <Form.Control\n                            id=\"alternative\"\n                            value={fields.alternative}\n                            onChange={handleFieldChange}\n                        />\n                    </Col>\n                    <Col>\n                        <Form.Label>Category</Form.Label>\n                        <Form.Control\n                            id=\"category\"\n                            value={fields.category}\n                            onChange={handleFieldChange}\n                        />\n                    </Col>\n                </Form.Row>\n\n                <Form.Label>Notes</Form.Label>\n                <Form.Control\n                    id=\"notes\"\n                    value={fields.notes}\n                    as=\"textarea\"\n                    onChange={handleFieldChange}\n                />\n                <Form.Label>Picture</Form.Label>\n                <Form.Control\n                    id=\"file\"\n                    onChange={handleFileChange}\n                    type=\"file\"\n                />\n                <LoadingButton\n                    type=\"submit\"\n                    isLoading={isLoading}\n                    disabled={!validateForm()}\n                > Add </LoadingButton>\n            </Form>\n        </Container>\n    )\n}\n\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { API, Storage } from \"aws-amplify\";\nimport { onError } from \"../libs/errorLib\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport { Form, FormControl, Button, Container } from \"react-bootstrap\";\nimport config from '../config';\nimport { s3Upload } from \"../libs/awsLib\";\n\nexport default function Items() {\n    const file = useRef(null);\n    const { id } = useParams();\n    const history = useHistory();\n    const [item, setItem] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isDeleting, setIsDeleting] = useState(false);\n    const [isEditing, setIsEditing] = useState(false);\n\n    const [fields, handleFieldChange] = useFormFields({\n        itemName: \"\",\n        quantity: \"\",\n        units: \"\",\n        alternative: \"\",\n        notes: \"\",\n    });\n\n    useEffect(() => {\n        function loadItem() {\n            return API.get(\"items\", `/items/${id}`);\n        }\n        async function onLoad() {\n            try {\n                const item = await loadItem();\n                const { itemName, quantity, units, alternative, notes, picture } = item;\n                if (picture) {\n                    item.pictureUrl = await Storage.vault.get(picture);\n                }\n                fields.itemName = item.itemName;\n                fields.quantity = item.quantity;\n                fields.units = item.units;\n                fields.alternative = item.alternative;\n                fields.notes = item.notes;\n                setItem(item);\n            } catch (e) {\n                onError(e);\n            }\n        }\n        onLoad();\n    }, [id]);\n\n    function saveItem(item) {\n        return API.put(\"items\", `items/${id}`, {\n            body: item\n        });\n    }\n    function validateForm() {\n        return fields.itemName.length > 0 && fields.quantity.length > 0 && fields.units.length > 0;\n    }\n    function handleFileChange(event) {\n        file.current = event.target.files[0];\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n            alert(\n                `Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE /\n                1000000} MB.`\n            );\n            return;\n        }\n        setIsLoading(true);\n        var itemName = fields.itemName;\n        var quantity = fields.quantity;\n        var units = fields.units;\n        var alternative = fields.alternative;\n        var notes = fields.notes;\n        try {\n            const picture = file.current ? await s3Upload(file.current) : null;\n            await saveItem({ itemName, quantity, units, alternative, notes, picture });\n            setIsEditing(false);\n        } catch (e) {\n            onError(e);\n            setIsLoading(false);\n        }\n\n    }\n\n    function deleteItem() {\n        return API.del(\"items\", `/items/${id}`);\n    }\n\n    async function handleDelete(event) {\n        event.preventDefault();\n        const confirmed = window.confirm(\n            \"Remove this item from shopping list?\"\n        );\n        if (!confirmed) { return; }\n        setIsDeleting(true);\n        try {\n            await deleteItem();\n            history.push(\"/\");\n        } catch (e) {\n            onError(e);\n            setIsDeleting(false);\n        }\n    }\n    return (\n        <div>\n            {item && (isEditing ? <Form onSubmit={handleSubmit}>\n                <h1>{fields.itemName}</h1>\n                <Form.Label>Quantity</Form.Label>\n                <FormControl\n                    id=\"quantity\"\n                    value={fields.quantity}\n                    onChange={handleFieldChange}\n                />\n                <Form.Label>Units</Form.Label>\n                <FormControl\n                    id=\"units\"\n                    value={fields.units}\n                    onChange={handleFieldChange}\n                />\n                <Form.Label>alternative</Form.Label>\n                <FormControl\n                    id=\"alternative\"\n                    value={fields.alternative}\n                    onChange={handleFieldChange}\n                />\n                <Form.Label>Notes</Form.Label>\n                <FormControl\n                    id=\"notes\"\n                    value={fields.notes}\n                    componentClass=\"textarea\"\n                    onChange={handleFieldChange}\n                />\n                <Form.Label>Picture</Form.Label>\n                <FormControl\n                    id=\"file\"\n                    onChange={handleFileChange}\n                    type=\"file\"\n                />\n                <Button\n                    type=\"submit\"\n                    isLoading={isLoading}\n                    disabled={!validateForm()}\n                > Update </Button>\n            </Form> :\n                <div>\n                    <h1>{fields.itemName}</h1>\n                    <p>{fields.quantity} {fields.units}</p>\n                    <p>alternative: {fields.alternative}</p>\n                    <p>{fields.notes}</p>\n                    <img src={item.pictureUrl} width={150} height={150} />\n                    <Button\n                        type=\"submit\"\n                        onClick={() => setIsEditing(true)}\n                    > Edit\n                    </Button>\n                    <Button\n                        type=\"submit\"\n                        onClick={handleDelete}\n                        isLoading={isDeleting}>\n                        Delete\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { onError } from \"../libs/errorLib\";\nimport { ListGroup, ListGroupItem, Button, ButtonGroup, Modal, Row, Col, Form, FormCheck } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { API } from \"aws-amplify\";\nimport config from \"../config\";\n\nexport default function Inventory() {\n    const [items, setItems] = useState([]);\n    const { isAuthenticated } = useAppContext();\n    const [isLoading, setIsLoading] = useState(true);\n    const [isDeleting, setIsDeleting] = useState(false);\n\n    useEffect(() => {\n        async function onLoad() {\n            if (!isAuthenticated) {\n                return;\n            }\n            try {\n                const items = await loadItems();\n                setItems(items);\n            } catch (e) {\n                onError(e);\n            }\n            setIsLoading(false);\n        }\n        onLoad();\n    }, [isAuthenticated]) // run hook when isAuthenticated is updated\n\n    function deleteItem(itemId) {\n        return API.del(\"items\", `/inventory/${itemId}`);\n    }\n\n    async function handleDelete(event) {\n        event.preventDefault();\n        const confirmed = window.confirm(\n            \"Remove this item from inventory?\"\n        );\n        if (!confirmed) { return; }\n        setIsDeleting(true);\n        try {\n            await deleteItem(event.target.id);\n            setItems(await loadItems());\n        } catch (e) {\n            onError(e);\n            setIsDeleting(false);\n        }\n    }\n\n    async function loadItems() {\n        return API.get(\"items\", \"/inventory\");\n    }\n    function renderItemsList(items) {\n        return (items).map((item, i) =>\n            (\n                <ListGroupItem key={i}>\n                    <Row>\n                        <Col xs={6}>\n                            <p>{item.itemName} - {item.quantity} {item.units}</p>\n                        </Col>\n                        <Col>\n                            <ButtonGroup>\n                                <Button\n                                    variant=\"outline-dark\"\n                                    id={item.itemId}\n                                    type=\"submit\"\n                                    onClick={handleDelete}\n                                    isLoading={isDeleting}>\n                                    ✕\n                                </Button>\n\n                            </ButtonGroup>\n                        </Col>\n                    </Row>\n                </ListGroupItem>\n            ));\n    }\n\n    function renderLander() {\n        return (\n            <div>\n                <h1>Inventory</h1>\n                <p>Log in to get started!</p>\n            </div>\n        )\n    }\n\n    function renderItems() {\n        return (\n            <div>\n                <h1>Inventory</h1>\n                <ListGroup>\n                    {!isLoading && renderItemsList(items)}\n                </ListGroup>\n            </div>\n        )\n    }\n    return (\n        <div>\n            {isAuthenticated ? renderItems() : renderLander()}\n        </div>\n    );\n}","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport ShoppingList from \"./containers/ShoppingList\";\nimport Login from \"./containers/Login\";\nimport NotFound from \"./containers/NotFound\";\nimport Signup from \"./containers/Signup\";\nimport NewItem from \"./containers/NewItem\";\nimport Items from \"./containers/Items.js\";\nimport Inventory from \"./containers/Inventory\"\nexport default function Routes() {\n    return (\n        <Switch>\n            <Route exact path=\"/\">\n                <ShoppingList />\n            </Route>\n            <Route exact path=\"/inventory\">\n                <Inventory/> \n            </Route>\n            <Route exact path=\"/login\">\n                <Login />\n            </Route>\n            <Route exact path=\"/signup\">\n                <Signup />\n            </Route>\n            <Route exact path=\"/items/new\">\n                <NewItem />\n            </Route>\n            <Route exact path=\"/items/:id\">\n                <Items />\n            </Route>\n            <Route>\n                <NotFound />\n            </Route>\n        </Switch>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Navbar, Nav, NavItem, Container } from \"react-bootstrap\";\nimport Routes from \"./Routes\";\nimport { AppContext } from \"./libs/contextLib\";\nimport { Auth } from \"aws-amplify\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { onError } from \"./libs/errorLib\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  const history = useHistory();\n  // calls function the first time component is rendered (empty array)\n  // if no array, hook exectued everytime component is rendered\n  useEffect(() => {\n    onLoad();\n  }, []);\n\n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      userHasAuthenticated(true);\n    }\n    catch (e) {\n      if (e !== 'No current user') {\n        onError(e);\n      }\n    }\n    setIsAuthenticating(false);\n  }\n  async function handleLogout() {\n    await Auth.signOut();\n    userHasAuthenticated(false)\n    history.push(\"/\");\n  }\n  return (\n    !isAuthenticating &&\n    <Container>\n      <Navbar>\n\n        <Navbar.Collapse>\n          <Nav>\n            {isAuthenticated\n              ? <>\n                <Nav.Link><Link style={{ textDecoration: 'none' }} to=\"/\">Shopping</Link></Nav.Link>\n                <Nav.Link><Link style={{ textDecoration: 'none' }} to=\"/inventory\">Inventory</Link></Nav.Link>\n                <Nav.Link onClick={handleLogout}>Logout</Nav.Link>\n                </>\n                  : <>\n                    <Nav.Link>\n                      <Link to=\"/signup\">Sign Up</Link>\n                    </Nav.Link>\n                    <Nav.Link>\n                      <Link to=\"/login\">Login</Link>\n                    </Nav.Link>\n                  </>\n            }\n          </Nav>\n              </Navbar.Collapse>\n      </Navbar>\n          <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}>\n            <Routes />\n          </AppContext.Provider>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Amplify } from 'aws-amplify';\nimport config from './config';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nAmplify.configure({\n  Auth: {\n    mandatorySignIn: true,\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID\n  },\n  Storage: {\n    region: config.s3.REGION,\n    bucket: config.s3.BUCKET,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID\n  },\n  API: {\n    endpoints: [\n      {\n        name: \"items\",\n        endpoint: config.apiGateway.URL,\n        region: config.apiGateway.REGION\n      },\n    ]\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}